swagger: '2.0'
info:
  description: |
    This a documentation for the biofeedback Rest API
  version: 1.0.0
  title: Biofeedback
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v2
paths:
  /user:
    post:
      tags:
        - User
      summary: Create user
      description: Create user
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: OK
    get:
      summary: Returns all users.
      description: Returns all users. Filter by role is possible
      tags:
        - User
      produces:
        - application/json
      parameters:
        - in: query
          name: role
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  /user/{userId}/measurements:
    get:
      summary: Measurements of a given User
      description: Returns all Measurements of a given User.
      tags:
        - User
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          type: integer
          format: int64
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Measurement'

  /institution:
    post:
      tags:
        - Institution
      summary: Create Institution
      description: Create Institution
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created institution object
          required: true
          schema:
            $ref: '#/definitions/Institution'
      responses:
        200:
          description: OK
    get:
      summary: Returns all institution
      description: Returns all institution
      produces:
        - application/json
      tags:
        - Institution
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Institution'

  /institution/{institutionId}:
    get:
      tags:
        - Institution
      summary: Find institution by Id
      description: Returns a single institution
      produces:
        - application/json
      parameters:
        - name: institutionId
          in: path
          description: Id of the institution
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Institution'
    put:
      tags:
        - Institution
      summary: Updates institution with Id
      description: Returns the updated institution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: institutionId
          in: path
          description: Id of the institution
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Updated institution object
          required: true
          schema:
            $ref: '#/definitions/Institution'
      responses:
        200:
          description: OK
    delete:
      summary: Deletes a single institution
      description: Deletes a single institution and returns that object if successful
      tags:
        - Institution
      produces:
        - application/json
      parameters:
        - name: institutionId
          in: path
          description: Id of the institution
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Institution'
  /role:
    get:
      summary: Get all defined roles
      description: Returns a list of all roles
      produces:
        - application/json
      tags:
        - Role
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string

  /measurement/{measurementId}/scene:
    get:
      summary: All Scenes of a Measurement by Id
      description: All Scenes of a Measurement by Id
      tags:
        - Measurement
      produces:
        - application/json
      parameters:
        - in: path
          name: measurementId
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Scene'
  /measurement/{measurementId}/scene/{sceneId}:
    put:
      summary: Assigns Scene with "SceneId" to Measurement
      description: Assigns Scene with "SceneId" to Measurement
      tags:
        - Scene
      produces:
        - application/json
      parameters:
        - in: path
          name: measurementId
          required: true
          type: integer
          format: int64
        - in: path
          name: sceneId
          required: true
          type: integer
          format: int64
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Scene'
    delete:
      summary: Removes Scene with "SceneId" from Measurement
      description: Removes Scene with "SceneId" from Measurement
      tags:
        - Scene
      parameters:
        - in: path
          name: measurementId
          required: true
          type: integer
          format: int64
        - in: path
          name: sceneId
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: OK

  /measurement/{measurementId}/data:
    get:
      tags:
        - Measurement
      summary: Array of MeasurementData
      description: Returns all data from Measurement
      produces:
        - application/json
      parameters:
        - name: measurementId
          in: path
          description: Id of the Measurement
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MeasurementData'
  /video:
    post:
      summary: Creates a new Video
      description: Creates a new Video
      tags:
        - Video
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/VideoUpdate'
          required: true
      responses:
        201:
          description: OK

  /video/{videoId}:
    put:
      summary: Updates a Video by Id from body
      description: Updates a Video by Id from body
      tags:
        - Video
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: videoId
          type: integer
          format: int64
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/VideoUpdate'
      responses:
        201:
          description: OK

    get:
      summary: Returns a Video by Id
      description: Returns a Video by Id
      tags:
        - Video
      parameters:
        - name: videoId
          in: path
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Video'
    delete:
      summary: Deletes a Video by it's Id
      description: Deletes a Video by it's Id
      tags:
        - Video
      produces:
        - application/json
      parameters:
        - in: path
          name: videoId
          type: integer
          format: int64
          required: true
      responses:
        204:
          description: OK
  /scene:
    get:
      summary: Returns all Scenes
      description: Returns all Scenes
      tags:
        - Scene
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Scene'
    post:
      summary: Creates a new Scene
      description: Creates a new Scene
      tags:
        - Scene
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SceneUpdate'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Scene'
  /scene/{sceneId}/video/{videoId}:
    put:
      summary: Assigns video with "VideoId" to Scene
      description: Assigns video with "VideoId" to Scene
      tags:
        - Video
        - Scene
      parameters:
        - in: path
          name: sceneId
          required: true
          type: integer
          format: int64
        - in: path
          name: videoId
          required: true
          type: integer
          format: int64
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Video'
    delete:
      summary: Removes video with "VideoId" from Scene
      description: Removes video with "VideoId" from Scene
      tags:
        - Video
        - Scene
      parameters:
        - in: path
          name: sceneId
          required: true
          type: integer
          format: int64
        - in: path
          name: videoId
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: OK

  /scene/{sceneId}/measurements:
    get:
      summary: All measurements of a Scene by Id
      description: All measurements of a Scene by Id
      tags:
        - Scene
      produces:
        - application/json
      parameters:
        - in: path
          name: sceneId
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Measurement'

tags:
  - name: User
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Video:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      sceneId:
        type: integer
        format: int64
      videoUrl:
        type: string
      labels:
        type: array
        items:
          type: object
          properties:
            timestamp:
              type: string
            label:
              type: string
  VideoUpdate:
    type: object
    properties:
      name:
        type: string
      sceneId:
        type: integer
        format: int64
      videoUrl:
        type: string
      labels:
        type: array
        items:
          type: object
          properties:
            timestamp:
              type: string
            label:
              type: string
  Institution:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      address:
        type: string
      measurementCount:
        type: integer
  Scene:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
  SceneUpdate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  Deck:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      filePath:
        type: string
      description:
        type: string
  Role:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        enum:
          - Admin
          - MeasurementAdmin
          - Subject
  Measurement:
    type: object
    properties:
      id:
        type: integer
        format: int64
      subjectId:
        type: integer
        format: int64
  MeasurementData:
    type: object
    properties:
      id:
        type: integer
        format: int64
      measurementId:
        type: integer
        format: int64
      timestamp:
        type: string
        format: timestamp
      data:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: number
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      roleId:
        type: string
      institutionId:
        type: integer
        format: int64
        default: null

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /dani9417/biofeedback/1.0.0
schemes:
  - https
  - http
